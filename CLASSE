*&---------------------------------------------------------------------*
*&       Class LCL_ZTREINAMENTO_ALV012
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS LCL_ZTREINAMENTO_ALV012 IMPLEMENTATION.

  METHOD BUSCA_DADOS.

      SELECT CPF
           TRABALHO
           SALARIO
      FROM ZTREINAMENTO_05
      INTO TABLE ME->MT_ZTREINAMENTO_05
      WHERE CPF      IN S_CPF
        AND TRABALHO IN S_TRAB.

    IF SY-SUBRC IS INITIAL.

      SELECT NOME
             CPF
             IDADE
        FROM ZTREINAMENTO_04
          INTO TABLE ME->MT_ZTREINAMENTO_04
          FOR ALL ENTRIES IN ME->MT_ZTREINAMENTO_05
        WHERE CPF EQ ME->MT_ZTREINAMENTO_05-CPF
          AND IDADE IN S_IDADE.

    ENDIF.

  ENDMETHOD.

  METHOD MONTA_SAIDA_1.

    DATA: LS_ZTREINAMENTO_04 TYPE MTYPE_ZTREINAMENTO_04,
          LS_ZTREINAMENTO_05 TYPE MTYPE_ZTREINAMENTO_05.

    FIELD-SYMBOLS: <FS_SAIDA> TYPE ZTREINAMENTO_06.

    CLEAR: GT_SAIDA[].

    LOOP AT ME->MT_ZTREINAMENTO_05 INTO LS_ZTREINAMENTO_05.

      APPEND INITIAL LINE TO GT_SAIDA ASSIGNING <FS_SAIDA>.

        <FS_SAIDA>-TRABALHO = LS_ZTREINAMENTO_05-TRABALHO.
        <FS_SAIDA>-SALARIO  = LS_ZTREINAMENTO_05-SALARIO.
        <FS_SAIDA>-CPF      = LS_ZTREINAMENTO_05-CPF.

      READ TABLE ME->MT_ZTREINAMENTO_04 INTO LS_ZTREINAMENTO_04 WITH KEY CPF = LS_ZTREINAMENTO_05-CPF.
      IF SY-SUBRC IS INITIAL.
        <FS_SAIDA>-NOME   = LS_ZTREINAMENTO_04-NOME.
        <FS_SAIDA>-IDADE  = LS_ZTREINAMENTO_04-IDADE.
      ENDIF.

    ENDLOOP.

  ENDMETHOD.

*  METHOD CADASTRAR.
*
*    CALL SCREEN 9001 STARTING AT 50 3.
*
*  ENDMETHOD.              "cadastrar


  METHOD IMPRIMIR_LIST.

*Variáveis para o formulário
    DATA:
      LV_FM_NAME TYPE  RS38L_FNAM.

    DATA:
      LS_CONTROL_PARAMETERS TYPE SSFCTRLOP,
      LS_OUTPUT_OPTIONS     TYPE SSFCOMPOP,
      LS_JOB_OUTPUT_INFO    TYPE SSFCRESCL.

    CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
      EXPORTING
        FORMNAME           = 'ZTREINAMENTO_SFORM03'
      IMPORTING
        FM_NAME            = LV_FM_NAME
      EXCEPTIONS
        NO_FORM            = 1
        NO_FUNCTION_MODULE = 2
        OTHERS             = 3.
    IF SY-SUBRC <> 0.
* Implement suitable error handling here
    ENDIF.

    LS_OUTPUT_OPTIONS-TDIMMED       = ABAP_TRUE.
    LS_OUTPUT_OPTIONS-TDDEST        = 'LOCL'.
    LS_OUTPUT_OPTIONS-TDFINAL       = ABAP_TRUE.
    LS_OUTPUT_OPTIONS-TDIEXIT       = ABAP_TRUE.

    LS_CONTROL_PARAMETERS-NO_DIALOG = ABAP_TRUE.
    LS_CONTROL_PARAMETERS-PREVIEW   = ABAP_FALSE.

    CALL FUNCTION LV_FM_NAME
      EXPORTING
        CONTROL_PARAMETERS = LS_CONTROL_PARAMETERS
        OUTPUT_OPTIONS     = LS_OUTPUT_OPTIONS
        USER_SETTINGS      = ' '
        IT_PESSOAS         = GT_SAIDA
      IMPORTING
        JOB_OUTPUT_INFO    = LS_JOB_OUTPUT_INFO
      EXCEPTIONS
        FORMATTING_ERROR   = 1
        INTERNAL_ERROR     = 2
        SEND_ERROR         = 3
        USER_CANCELED      = 4
        OTHERS             = 5.

  ENDMETHOD.

ENDCLASS.                    "LCL_ZTREINAMENTO_ALV012

*----------------------------------------------------------------------*
*       CLASS CL_ALV IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS LCL_ALV IMPLEMENTATION.

  METHOD CREATE_OBJECTS.

*    "Cria o CONTAINER
*    CREATE OBJECT G_CUSTOM_CONTAINER
*      EXPORTING
*        CONTAINER_NAME = GV_CONTAINER.

*    "Cria o GRID
*    CREATE OBJECT G_GRID
*      EXPORTING
*        I_PARENT = G_CUSTOM_CONTAINER.

    "Cria o GRID
    CREATE OBJECT G_GRID
      EXPORTING
        I_PARENT = CL_GUI_CONTAINER=>DEFAULT_SCREEN.

  ENDMETHOD.                    "create_objects

  METHOD DEFINE_LAYOUT.

    ME->MS_LAYOUT-SEL_MODE   = 'A'.
    ME->MS_LAYOUT-NO_ROWMARK = ABAP_FALSE.
    ME->MS_LAYOUT-ZEBRA      = ABAP_TRUE.
    ME->MS_LAYOUT-CWIDTH_OPT = ABAP_TRUE.
    ME->MS_LAYOUT-NO_TOOLBAR = ABAP_FALSE.
    ME->MS_LAYOUT-STYLEFNAME = 'CELL_STYLE'.

  ENDMETHOD.                    "define_layout

  METHOD CREATE_FIELDCAT.

    FIELD-SYMBOLS: <FS_FIELDCAT> TYPE LVC_S_FCAT.

    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME       = 'ZTREINAMENTO_06'
      CHANGING
        CT_FIELDCAT            = ME->MT_FIELDCAT[]
      EXCEPTIONS
        INCONSISTENT_INTERFACE = 0
        PROGRAM_ERROR          = 0
        OTHERS                 = 0.

    LOOP AT ME->MT_FIELDCAT ASSIGNING <FS_FIELDCAT>.

      CASE <FS_FIELDCAT>-FIELDNAME.
        WHEN 'CPF'.
          <FS_FIELDCAT>-EDIT_MASK = '___.___.___-__'.
          <FS_FIELDCAT>-REPTEXT   = 'CPF'.
          <FS_FIELDCAT>-SCRTEXT_L = 'CPF'.
          <FS_FIELDCAT>-SCRTEXT_M = 'CPF'.
          <FS_FIELDCAT>-SCRTEXT_S = 'CPF'.
        WHEN 'IDADE'.
          <FS_FIELDCAT>-REPTEXT   = 'Idade'.
          <FS_FIELDCAT>-SCRTEXT_L = 'Idade'.
          <FS_FIELDCAT>-SCRTEXT_M = 'Idade'.
          <FS_FIELDCAT>-SCRTEXT_S = 'Idade'.
      ENDCASE.
    ENDLOOP.

  ENDMETHOD. "create_fieldcat

  METHOD EXCLUDE_TB_FUNCTIONS.

    FIELD-SYMBOLS: <FS_EXCLUDE> TYPE UI_FUNC.

    CLEAR: ME->MT_EXCLUDE[].

    "Copiar linha
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.

    "Deletar linha
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW.

    "Adicionar linha
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW.

    "Inserir nova linha
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW.

    "Mover linha
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW.

    "Atualizar
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_REFRESH.

    "Recortar
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.

    "Copiar
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.

    "Colar
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_MB_PASTE.

    "Colar
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE.

    "Colar nova linha
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW.

    "Desfazer
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.

    "Checar entrada
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_CHECK.

    "Detalhes
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_DETAIL.

    "Gr�fico
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_GRAPH.

    "Informa��o
    UNASSIGN <FS_EXCLUDE>.
    APPEND INITIAL LINE TO ME->MT_EXCLUDE ASSIGNING <FS_EXCLUDE>.
    <FS_EXCLUDE> = CL_GUI_ALV_GRID=>MC_FC_INFO.

  ENDMETHOD.                    "exclude_tb_functions

  METHOD DISPLAY.

    CALL METHOD G_GRID->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        I_SAVE               = 'A'
        IS_LAYOUT            = ME->MS_LAYOUT
        IS_VARIANT           = ME->MS_VARIANT
        IT_TOOLBAR_EXCLUDING = ME->MT_EXCLUDE
        I_BYPASSING_BUFFER   = ABAP_TRUE
      CHANGING
        IT_SORT              = ME->MT_SORT[]
        IT_FIELDCATALOG      = ME->MT_FIELDCAT[]
        IT_OUTTAB            = GT_SAIDA[].

  ENDMETHOD.                    "display

  METHOD CREATE_ALV.

    CREATE_OBJECTS( ).

    DEFINE_LAYOUT( ).

    CREATE_FIELDCAT( ).

    EXCLUDE_TB_FUNCTIONS( ).

    "SUBTOTAL( ).

    DISPLAY( ).

  ENDMETHOD.                    "create_alv

  METHOD SET_EVENTS.

    CREATE OBJECT EVENT_RECEIVER.
    SET HANDLER EVENT_RECEIVER->HANDLE_USER_COMMAND  FOR G_GRID.
    SET HANDLER EVENT_RECEIVER->HANDLE_TOOLBAR       FOR G_GRID.

    CALL METHOD G_GRID->SET_TOOLBAR_INTERACTIVE.

    CALL METHOD G_GRID->CHECK_CHANGED_DATA.

* Usar para disparar eventos que dever�o ser tratados no DATA_CHANGED
    CALL METHOD G_GRID->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED
      EXCEPTIONS
        ERROR      = 1
        OTHERS     = 2.

  ENDMETHOD.  "set_events

  METHOD REFRESH.

    CALL METHOD G_GRID->REFRESH_TABLE_DISPLAY
      EXPORTING
        I_SOFT_REFRESH = ABAP_TRUE.

  ENDMETHOD.

*  METHOD SUBTOTAL.
*
*    DATA: LS_SORT TYPE LVC_S_SORT.
*
*    LS_SORT-SPOS      = 1.
*    LS_SORT-FIELDNAME = 'CARRID'.
*    LS_SORT-UP        = 'X'.
*    LS_SORT-SUBTOT    = 'X'.
*    APPEND LS_SORT TO MT_SORT.

*  ENDMETHOD.

ENDCLASS.                 "lcl_alv IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS CL_EVENT_RECEIVER IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS LCL_EVENT_RECEIVER IMPLEMENTATION.

  METHOD HANDLE_TOOLBAR.
    DATA: LS_TOOLBAR  TYPE STB_BUTTON.

* append a separator to normal toolbar
    CLEAR LS_TOOLBAR.
    MOVE 3 TO LS_TOOLBAR-BUTN_TYPE.
    APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.

* Bot�o IMPRIMIR
    READ TABLE E_OBJECT->MT_TOOLBAR TRANSPORTING NO FIELDS WITH KEY FUNCTION = 'IMPRIMIR'.
    IF SY-SUBRC IS NOT INITIAL.
      CLEAR LS_TOOLBAR.
      MOVE 'IMPRIMIR'      TO LS_TOOLBAR-FUNCTION.
      MOVE  ICON_PRINT     TO LS_TOOLBAR-ICON.          "table ICON
      MOVE 'Imprimir'(111) TO LS_TOOLBAR-QUICKINFO.
      MOVE 'Imprimir'(112) TO LS_TOOLBAR-TEXT.
      MOVE ' '             TO LS_TOOLBAR-DISABLED.
      APPEND LS_TOOLBAR    TO E_OBJECT->MT_TOOLBAR.
    ENDIF.
*
* Bot�o Refresh
    READ TABLE E_OBJECT->MT_TOOLBAR TRANSPORTING NO FIELDS WITH KEY FUNCTION = 'REFRESH'.
    IF SY-SUBRC IS NOT INITIAL.
      CLEAR LS_TOOLBAR.
      MOVE 'REFRESH'      TO LS_TOOLBAR-FUNCTION.
      MOVE ICON_REFRESH   TO LS_TOOLBAR-ICON.          "table ICON
      MOVE 'Refresh'(111) TO LS_TOOLBAR-QUICKINFO.
      MOVE 'Refresh'(112) TO LS_TOOLBAR-TEXT.
      MOVE ' '            TO LS_TOOLBAR-DISABLED.
      APPEND LS_TOOLBAR   TO E_OBJECT->MT_TOOLBAR.
    ENDIF.
*
** Bot�o Soma
*    READ TABLE E_OBJECT->MT_TOOLBAR TRANSPORTING NO FIELDS WITH KEY FUNCTION = 'SOMA'.
*    IF SY-SUBRC IS NOT INITIAL.
*      CLEAR LS_TOOLBAR.
*      MOVE 'SOMA'         TO LS_TOOLBAR-FUNCTION.
*      MOVE ICON_SUM       TO LS_TOOLBAR-ICON.          "table ICON
*      MOVE 'Soma'(111)    TO LS_TOOLBAR-QUICKINFO.
*      MOVE 'Soma'(112)    TO LS_TOOLBAR-TEXT.
*      MOVE ' '            TO LS_TOOLBAR-DISABLED.
*      APPEND LS_TOOLBAR   TO E_OBJECT->MT_TOOLBAR.
*    ENDIF.

  ENDMETHOD."handle_toolbar

  METHOD HANDLE_USER_COMMAND.

    CASE E_UCOMM.
      WHEN 'IMPRIMIR'.

        GR_ZTREINAMENTO_ALV012->IMPRIMIR_LIST( ).
      WHEN 'REFRESH'  .
        GR_ZTREINAMENTO_ALV012->BUSCA_DADOS( ).
        GR_ZTREINAMENTO_ALV012->MONTA_SAIDA_1( ).

        GR_ALV->REFRESH( ).
    ENDCASE.

  ENDMETHOD. "handle_user_command

  METHOD HANDLE_DATA_CHANGE_FINISH.

  ENDMETHOD. "handle_data_changE_finish

  METHOD HANDLE_PRINT_TOP_OF_PAGE.

  ENDMETHOD. "handle_print_top_of_page

  METHOD HANDLE_TOP_OF_PAGE.

  ENDMETHOD. "handle_top_of_page

ENDCLASS.                    "lcl_event_receiver IMPLEMENTATION
